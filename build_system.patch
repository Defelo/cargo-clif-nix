diff --git a/build_system/prepare.rs b/build_system/prepare.rs
index ac2dc47d..f5613762 100644
--- a/build_system/prepare.rs
+++ b/build_system/prepare.rs
@@ -10,8 +10,6 @@
 use super::utils::{copy_dir_recursively, git_command, retry_spawn_and_wait, spawn_and_wait};
 
 pub(crate) fn prepare(dirs: &Dirs, rustc: &Path) {
-    RelPath::DOWNLOAD.ensure_fresh(dirs);
-
     prepare_stdlib(dirs, rustc);
     prepare_coretests(dirs, rustc);
 
@@ -131,44 +129,7 @@ fn clone_repo_shallow_github(dirs: &Dirs, download_dir: &Path, user: &str, repo:
     let archive_file = RelPath::DOWNLOAD.to_path(dirs).join(format!("{}.tar.gz", rev));
     let archive_dir = RelPath::DOWNLOAD.to_path(dirs).join(format!("{}-{}", repo, rev));
 
-    eprintln!("[DOWNLOAD] {}/{} from {}", user, repo, archive_url);
-
-    // Remove previous results if they exists
-    let _ = std::fs::remove_file(&archive_file);
-    let _ = std::fs::remove_dir_all(&archive_dir);
-    let _ = std::fs::remove_dir_all(&download_dir);
-
-    // Download zip archive
-    let mut download_cmd = Command::new("curl");
-    download_cmd
-        .arg("--max-time")
-        .arg("600")
-        .arg("-y")
-        .arg("30")
-        .arg("-Y")
-        .arg("10")
-        .arg("--connect-timeout")
-        .arg("30")
-        .arg("--continue-at")
-        .arg("-")
-        .arg("--location")
-        .arg("--output")
-        .arg(&archive_file)
-        .arg(archive_url);
-    retry_spawn_and_wait(5, download_cmd);
-
-    // Unpack tar archive
-    let mut unpack_cmd = Command::new("tar");
-    unpack_cmd.arg("xf").arg(&archive_file).current_dir(RelPath::DOWNLOAD.to_path(dirs));
-    spawn_and_wait(unpack_cmd);
-
-    // Rename unpacked dir to the expected name
-    std::fs::rename(archive_dir, &download_dir).unwrap();
-
     init_git_repo(&download_dir);
-
-    // Cleanup
-    std::fs::remove_file(archive_file).unwrap();
 }
 
 fn init_git_repo(repo_dir: &Path) {
diff --git a/build_system/utils.rs b/build_system/utils.rs
index 3e12ed22..eaf08809 100644
--- a/build_system/utils.rs
+++ b/build_system/utils.rs
@@ -78,6 +78,7 @@ fn base_cmd(&self, command: &str, cargo: &Path, dirs: &Dirs) -> Command {
         let mut cmd = Command::new(cargo);
 
         cmd.arg(command)
+            .arg("--offline")
             .arg("--manifest-path")
             .arg(self.manifest_path(dirs))
             .arg("--target-dir")
